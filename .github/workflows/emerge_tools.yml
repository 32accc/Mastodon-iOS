name: Emerge Tools

on:
  push:
    branches:
    - master
    - develop
  pull_request:
    branches:
    - develop

# macOS environments: https://github.com/actions/virtual-environments/tree/main/images/macos

jobs:
  emerge_tools:
    name: Upload Build Analysis to Emerge Tools
    runs-on: macos-12
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        env: 
          NotificationEndpointDebug: ${{ secrets.NotificationEndpointDebug }}
          NotificationEndpointRelease: ${{ secrets.NotificationEndpointRelease }}
        run: exec ./.github/scripts/setup.sh
      - name: archive
        env:
          SCHEME: Debug
        run: exec ./.github/scripts/archive.sh
      - name: Copy Link Maps
        env: 
          SCHEME: Debug
        continue-on-error: true
        run: |
          mkdir "./build/Archives/${SCHEME}.xcarchive/Linkmaps"
          find ./build -iname *-LinkMap-*.txt -exec cp "{}" "./build/Archives/${SCHEME}.xcarchive/Linkmaps/"  \;
      - name: Upload to Emerge Tools
        env: 
          EMERGE_API_TOKEN: ${{ secrets.EMERGE_API_TOKEN }}
          SCHEME: Debug
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          PULL_NUMBER: ${{ github.event.pull_request.number }}
        run: bundle exec fastlane app_size
  performance_testing:
    name: Upload Performance Testing to Emerge Tools
    runs-on: macos-12
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        env: 
          NotificationEndpointDebug: ${{ secrets.NotificationEndpointDebug }}
          NotificationEndpointRelease: ${{ secrets.NotificationEndpointRelease }}
        run: exec ./.github/scripts/setup.sh
      - name: Import Code-Signing Certificates            
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          keychain: build-p12
          p12-file-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}
      - name: Rename Bundle Identifier
        env: 
          ORIGINAL_BUNDLE: com.emerge.mastodon
          NEW_BUNDLE: com.emerge.mastodon.release
        run: |
          sed -i '' "s/${ORIGINAL_BUNDLE}/${NEW_BUNDLE}/g" Mastodon.xcodeproj/project.pbxproj
      - name: Build for Testing
        env:
          SCHEME: Release
          # We need this keys because we are building for iOS Device
          ENV_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          ENV_API_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          ENV_API_PRIVATE_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_KEY_BASE64 }}
        run: exec ./.github/scripts/performance.sh
      - name: Upload to Emerge Tools
        env: 
          EMERGE_API_TOKEN: ${{ secrets.EMERGE_API_TOKEN }}
          SCHEME: Release
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          PULL_NUMBER: ${{ github.event.pull_request.number }}
        run: bundle exec fastlane app_size
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain build-p12.keychain-db 
